[bdist_wheel]
# NOTE: "universal = 1" causes `bdist_wheel` to create a wheel that with the
# NOTE: tag "py2.py3" which implies (and tricks pip into thinking) that this
# NOTE: wheel contains Python 2 compatible code. This is not true and conflicts
# NOTE: with the "Requires-Python" field in the metadata that says that we only
# NOTE: support Python 3.6+.
# NOTE: We need to keep it at "0" which will produce wheels tagged with "py3"
# NOTE: when built under Python 3.
# Ref: https://github.com/pypa/packaging.python.org/issues/726
universal = 0

[metadata]
name = sphinxcontrib-towncrier
url = https://github.com/sphinx-contrib/sphinxcontrib-towncrier
project_urls =
  GitHub: repo = https://github.com/sphinx-contrib/sphinxcontrib-towncrier
  GitHub: issues = https://github.com/sphinx-contrib/sphinxcontrib-towncrier/issues
description = An RST directive for injecting a Towncrier-generated changelog draft containing fragments for the unreleased (next) project version
long_description = file: README.rst
long_description_content_type = text/x-rst
author = Sviatoslav Sydorenko
author_email = wk+pypi/sphinxcontrib-towncrier@sydorenko.org.ua
maintainer = Oleksiy Vasylyshyn
maintainer_email = slsh1o-git@protonmail.com
license = BSD 3-Clause License
license_files =
  LICENSE
classifiers =
  Development Status :: 3 - Alpha

  Framework :: Sphinx
  Framework :: Sphinx :: Extension

  Intended Audience :: Developers

  License :: OSI Approved :: BSD License

  Operating System :: OS Independent

  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11

  Topic :: Software Development :: Documentation

  Topic :: Documentation :: Sphinx
  Topic :: System :: Software Distribution
  Topic :: Utilities

[options]
include_package_data = True
install_requires =
  importlib-metadata >= 4.7.1; python_version < '3.8'
  sphinx
  towncrier >= 19.2
package_dir =
  = src
packages = find_namespace:
python_requires = >=3.6
zip_safe = True

[options.packages.find]
where = src
